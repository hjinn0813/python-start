### 연산자 종류와 우선순위
## 산술연산자
## 사칙연산 (덧셈, 뺄셈, 곱셈, 나눗셈)
5 + 2
10 - 5
10 * 5
10 / 5 
# -> return 2.0

## 정수 나누기 (결과가 정수로 출력)
10 // 5 
# -> return 2

## 거듭제곱 (a의 n제곱)
5**2
# 5의 2제곱이므로 return 25

## 나머지
11 % 5
# 몫은 2, 나머지는 1

# -------------------------------------------------------------------------
## 연산자 우선순위
# 수식에서 괄호는 소괄호만 사용한다

2 ** 5 // 3 + 1
''' 
2의 5제곱을 3으로 정수 나누기 하고 1을 더한다
-> 32 // 3 + 1
-> 10 + 1
-> return 11
'''

2 ** ((5 // 3) + 1)
'''
5를 3으로 정수 나누기 하고 1을 더한 값만큼 2를 곱한다
-> 2 ** (1 + 1)
-> 2 ** 2
-> return 4
'''

(2 ** 5) // (3 + 1)
'''
2의 5제곱과 3 더하기 1을 먼저 구한 다음, 정수 나누기를 한다
-> 32 // 4
-> return 8
'''

## 문자열 덧셈, 곱셈
# 변수에 저장한 문자를 더하거나 곱하기 가능
str1 = 'Hello~'
str2 = 'world'
str1 + str2 
# return 'Hello~world'

str1, str2 
# return ('hello~', 'world')

str1 * 3
# return 'Hello~Hello~Hello~'

# -------------------------------------------------------------------------
## 문자 인덱싱 (zero-based numbering)
str = 'strawberry moon'
str[1] # return 't'
str[0] # return 's'
str[-0] # return 's', 일반 0과 같음
str[-1] # return 'n', 끝에서부터 셀 때는 zero 개념이 없음

## 문자 슬라이싱 (zero-based numbering)
'''
- 기본구조: 변수[시작지점 : 종료지점]
- 종료지점은 반드시 n-1 위치이다
- 시작지점과 종료지점은 생략할 수 있다
(시작지점 생략하면 0부터, 종료지점 생략하면 맨 끝까지 출력)
'''
str[5:10] # return 'berry', 5~9까지 출력
str[:5] # return 'straw', 0~4까지 출력
str[11:] # return 'moon'
str[:] # return 'strawberry moon' (전부 출력)
